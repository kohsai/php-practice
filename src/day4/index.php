<?php

// 📘 Day4教材：index.php
// 🎯 テーマ：繰り返し処理（while / for / foreach）
// 🧠 1. while文の基本
// 🔰 解説：
// while 文は「条件が true（真）である間」繰り返し処理を行います。

// 何回繰り返すかが決まっていないような処理に向いています。

// 条件がずっとtrueのままだと無限ループになるので、
// 毎回少しずつ条件が変化するように記述します。

echo "【while文の例】<br>";

// カウント用の変数 $i を1で初期化
$i = 1;

// $i が 5 以下である間は繰り返す
while ($i <= 5) {
    echo "カウント: $i<br>";  // 現在のカウントを表示
    $i++;                     // カウントを1増やす（重要）
}

echo "<br>";


// 🧠 2. for文の基本
// 🔰 解説：
// for 文は「初期値・条件・更新処理」をまとめて1行で書けるループです。

// 「決まった回数だけ処理したい」ときにとても便利です。

// 例：for ($i = 1; $i <= 5; $i++)
// → $i を1から始め、5以下の間繰り返し、毎回1ずつ増やす。

echo "【for文の例】<br>";

for ($j = 1; $j <= 5; $j++) {
    echo "カウント: $j<br>";  // 現在のカウントを表示
}

echo "<br>";


// 🧠 3. foreach文の基本
// 🔰 解説：
// foreach 文は「配列の要素を1つずつ取り出して処理」する構文です。

// for文よりも簡単に書けるため、配列を使うときの定番ループです。

// $fruits as $fruit のように書くと、配列 $fruits の中身を1つずつ $fruit に代入して繰り返します。

echo "【foreach文の例】<br>";

// 配列を用意
$fruits = ["りんご", "バナナ", "みかん"];

// 配列の要素を1つずつ取り出して表示
foreach ($fruits as $fruit) {
    echo "フルーツ: $fruit<br>";
}

echo "<br>";


// 🧠 4. ネストされたループ（for文の中にfor文）
// 🔰 解説：
// 「ネストされたループ」とは、あるループの中に別のループを入れることを言います。

// 2重ループによって、行と列の組み合わせを処理したり、表形式の出力ができます。

// 例えば、九九表（1の段〜9の段）などが代表的な例です。

// 💻 コード例（1〜3の段の九九）

echo "【ネストされたループの例】<br>";

// 外側のループ：段（1〜3）
for ($dan = 1; $dan <= 3; $dan++) {
    echo "{$dan}の段<br>";  // 段のタイトル表示

    // 内側のループ：1〜9までのかけ算
    for ($i = 1; $i <= 9; $i++) {
        $result = $dan * $i;
        echo "{$dan} × {$i} = {$result}<br>";
    }

    echo "<br>"; // 段ごとに空行（見やすくするため）
}

// 🧩 解説ポイントまとめ
// 行	内容
// for ($dan = 1; $dan <= 3; $dan++)	外側ループで「段」を1から3まで繰り返します

// for ($i = 1; $i <= 9; $i++)	内側ループで「かける数」を1から9まで繰り返します

// $result = $dan * $i;	計算結果を変数に代入

// echo "{$dan} × {$i} = {$result}<br>";	計算式と結果を表示

