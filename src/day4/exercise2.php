<?php
// 🎯 Day4 追加練習問題 ⓶（exercise2.php）
// 📝 【問題】配列の中から「偶数かつ10以上」の数字だけを1行ずつ表示する

// 以下の配列があります：

// $numbers = [5, 12, 7, 20, 3, 8, 15, 30, 2];

// この中から
// ✅ 「偶数かつ10以上」の数字だけを1行ずつ
// ✅ 「対象の数字: ○○」という形式で表示
// ✅ 出力は <br> で改行
// してください。

// 📝 条件まとめ
// 配列 $numbers の中から
// 偶数かつ10以上 の数字を探す
// 該当する数字を1つずつ
// 「対象の数字: ○○」という形式で表示
// 出力は <br> で改行

// 💡 （小さなヒント）
// if の条件は
// → ($number % 2 == 0 && $number >= 10)
// で表せます。


// 🎯 ステップに分ける日本語例
// まずはこの問題を
// 「処理の流れを日本語でステップに分けて」書いてみて
// そのあと それをコメント化 → コード化

// 例えば：

// 1️⃣ 配列を用意する

use BcMath\Number;

$numbers = [5, 12, 7, 20, 3, 8, 15, 30, 2];

// 2️⃣ 配列から1つずつ数字を取り出す
foreach ($numbers as $number) {

// 3️⃣ その数字が偶数かどうか、その数字が10以上か確認する確認する
    if ($number % 2 == 0 && $number >= 10) {

// 5️⃣ 条件を満たす数字だけ表示する。表示形式は「対象の数字: ○○」。出力に <br> をつける
echo "対象の数字:$number<br>";
    }
}


// 🎯 Day4 追加練習問題 ⓷
// 📝 【問題】配列の中から「奇数かつ20未満」の数字だけを合計し、最後に合計値を出力する

// 以下の配列があります：
// $numbers = [3, 15, 22, 7, 19, 30, 1, 20];

// この中から
// ✅ 「奇数かつ20未満」の数字だけを足し算して
// ✅ 最後に「奇数かつ20未満の合計: ○○」という形式で出力
// ✅ 出力は <br> をつけてブラウザで表示
// してください。

// 📝 条件まとめ
// 配列 $numbers の中から
// 奇数かつ20未満 の数字を探す
// 該当する数字を全部足して
// 最後に1回だけ
// 「奇数かつ20未満の合計: ○○」 と出力
// 出力は <br> で改行

// 💡 （ヒント）
// ✅ 奇数かどうか → $number % 2 != 0
// ✅ 20未満かどうか → $number < 20
// ✅ 条件式は

// if ($number % 2 != 0 && $number < 20)


// 今回もこれまでと同じように：
// 1️⃣ まず処理の流れを日本語でステップに分ける
// 2️⃣ それをコメント化 → コード化してみる

// ↓ 自分で書いてみた。

// ・配列を書き出す。
// ・最初に合計の変数を指定。sum関数。
// ・奇数かつ20未満の数字だけ取り出す。
// ・取り出した数字を合計に足していく。
// ・その合計を「奇数かつ２０未満の合計：○○」で出力。
// ・出力は<br>で改行。




// 【 修正点 】
// ↓
// 💬 補足・アドバイスポイント
// 🔍 1️⃣ 「sum関数」についての記述

// ここで「sum関数」と書いてくれましたが、今回の課題ではPHPの組み込み関数 array_sum() は使わず、ループの中で自分で足し算していく処理 が求められています。なのでここは：

// ✅ 「合計用の変数 $sum を 0 で初期化」
// ✅ 「ループ内で $sum = $sum + $number; する」

// という意図が含まれているともっと正確です✨


// 🎯 ① $sum とは何か？ array_sum() との違いは？
// ✅ $sum とは「合計値を入れておく自分で作った変数」
// 例えば、数字をどんどん足していくときに「今までの合計」を入れておく箱みたいなものです。

// たとえば：
// $sum = 0; // 合計を0からスタート
// $sum = $sum + 3; // 3を足す → 合計は3
// $sum = $sum + 7; // さらに7を足す → 合計は10
// こうして1つずつ数字を自分で足していくときに使います。



// ✅ array_sum() とは「配列の全部の数字を自動で合計する関数」
// PHPには「配列の中身を全部足してくれる便利な関数」が最初から用意されています。

// $numbers = [3, 7, 10];
// echo array_sum($numbers); // 結果：20
// → これだとループを書かなくても一発で合計が出ます。


// 📝 つまり違いは：

// $sum（自作の変数の場合）
// 計算の流れ ⇒ 自分で1つずつ足す
// ループの有無  ⇒ foreach や for が必要
// 条件付き合計 ⇒ 条件を if 文で書ける

// array_sum()（組み込み関数の場合）
// 計算の流れ ⇒ 自動で全部足してくれる
// ループの有無 ⇒ ループを書く必要なし
// 条件付き合計 ⇒ 条件付きには使えない


// 今回の課題では「奇数かつ20未満」という「条件がある」ため、👉 array_sum() だと「条件」を指定できないんです。

// だから今回は 「自分でループして if で条件を判定 → 条件に合う数字だけ $sum に足す」
// という手法を使う必要があるんです✨



// 🔍 2️⃣ ループ処理を明示するとさらにGOOD
// 「奇数かつ20未満の数字だけ取り出す」とありますが、
// この部分は実際には：
// ✅ 配列を1つずつ見る
// ✅ 条件に当てはまるものだけを使うということなので、
// 「配列から数字を1つずつ取り出して、条件に合う数字だけを合計に足す」と書くと、ループ処理（foreach）が必要だと意識しやすくなります。


// なので処理を日本語で記述する例としては・・

// ・配列を書き出す。
// ・合計を入れる変数を0で初期化。
// ・配列の数字を1つずつ取り出す。
// ・数字が奇数かつ20未満なら、合計にその数字を足す。
// ・合計を「奇数かつ20未満の合計：○○」で出力。
// ・出力は<br>で改行。

// という感じになります。



// コードに直してみる。
// ↓

// ・配列を書き出す。
$numbers = [3, 15, 22, 7, 19, 30, 1, 20];

// ・合計を入れる変数を0で初期化。
$sum = 0;
// ・配列の数字を1つずつ取り出す。
foreach($numbers as $number) {

// ・数字が奇数かつ20未満なら、合計にその数字を足す。
// ✅ 奇数かどうか → $number % 2 != 0
// ✅ 20未満かどうか → $number < 20
// ✅ 条件式は
    if ($number % 2 != 0 && $number < 20) {
    $sum = $sum + $number;
    }
}
// ・合計を「奇数かつ20未満の合計：○○」で出力。
echo "奇数かつ20未満の合計:$sum<br>";
// ・出力は<br>で改行。
