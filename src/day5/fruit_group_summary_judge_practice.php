<?php
// 🎯 Day5 練習問題（fruit_group_summary_judge_practice.php）
//
// 📝 【問題】
// 以下のユーザー情報から、「果物のグループごとに好みが分かれる傾向があるかどうか」を判定してください。
//
// 【条件】
// ✅ 各ユーザーは「名前」と「好きな果物」を持っている
// ✅ 以下のように果物をグループ分けしておく
//     - グループA（赤系）：りんご、さくらんぼ、いちご
//     - グループB（黄系）：バナナ、みかん、パイナップル
// ✅ それぞれのグループに属する果物が何人に好まれているかをカウント
// ✅ どちらのグループがより人気かを判定して結果を表示
// ✅ どちらも同じ人数の場合は「同数でした」と表示
// ✅ 存在しない果物はカウント対象外とする
//
// 【ヒント】
// 💡 in_array() を使って果物の所属グループを判定しましょう
// 💡 グループA・Bの人数カウント用変数を用意し、それぞれを加算していきます
//
// ✅ 出力は以下の形式で表示してください（<br>で改行）
//   - 「グループA（赤系）を好む人数: ○人」
//   - 「グループB（黄系）を好む人数: ○人」
//   - 「結果: グループAの方が人気です」など

// ✅ ここから下に『自分で考えた日本語の処理手順』をコメントで書いてください。
// （ここに自分で日本語の処理文を書いてください）


//  $usersの配列を準備し定義しておく。
//  $group-Aと$group-Bのグループを事前に定義。
//  （$group-A = [];  $group-B = [];）
//  foreachで１件ずつ処理。
//
//         ↑
// ここで行き詰まり質問する


// 日本語の処理のヒント

//  ユーザーの「好きな果物」がグループAに含まれているかを調べる（in_array）
// → 含まれていたら、グループAのカウントを+1する
//  そうでなければ、グループBに含まれているかを調べる
// → 含まれていたら、グループBのカウントを+1する
//  どちらにも含まれていない場合は何もしない
//
//  すべてのループが終わったあと、グループAとグループBの人数を比較する
//  → グループAの方が多ければ「グループAの方が人気です」と表示
//  → グループBの方が多ければ「グループBの方が人気です」と表示
//  → 同じ人数であれば「同数でした」と表示
//
//  最後に「グループA（赤系）を好む人数: ○人」などの人数も表示する


// ここでチェックと修正

// ✅ ① $group-A と $group_a の違い（＝変数名の記述ミス）
// ❌ $group-A は構文エラーになる

// $group-A = [];  // ← 実際には「$group から A を引く」という計算扱いになる
// PHPでは変数名に -（ハイフン）は使えません。
// そのため、$group-A は **「変数名ではなく減算の式」**として解釈され、構文エラーになります。


// ✅ $group_a は正しい変数名
// $group_a = ["りんご", "さくらんぼ", "いちご"];
// これは「group_a」という名前の変数であり、
// アンダースコア（_）はPHPで一般的に使われる変数の区切り文字です。
// 問題なく使えます。

// ✅ ② 配列とカウント変数の違い（用途の違い）

// さきほどの記述では：
// // $group-A = [];  // ← グループの果物リストを定義する配列を想定している？

// 一方、提示されたのは：
// $group_a_count = 0;  // ← グループAを好むユーザーの「人数」を数えるカウンター
// つまり、役割が異なります。


// 変数	       用途	                 例
// $group_a	 赤系の果物リスト（配列）	["りんご", "さくらんぼ", "いちご"]

// $group_a_count	それらの果物を好む人の人数（整数）	0 → 1 → 2...と加算

// 🎯 まとめ：記述ミスの本質
// 誤り	               正しい意図
// $group-A = [];	配列を定義したかった

// 修正例：
// $group_a = ["りんご", "さくらんぼ", "いちご"];
// ハイフン使用	PHPでは構文エラーになる	アンダースコア（_）を使う



// 今回の練習問題「fruit_group_summary_judge_practice.php」は、Day5の複数の学習内容を組み合わせて活用する総合的な練習ですね。

// そこで、参照すべき過去のファイル・教材とその中のヒントになる記述を、以下に解答を含まずに整理してご紹介します。

// ✅ ヒントとなる過去ファイルと使うべき記述一覧
// ⓵ in_array_lesson.php（in_array() の使い方）
// 📘 ポイント：果物が特定のリストに含まれているかを判定する

// $fruits = ["りんご", "バナナ", "みかん"];

// if (in_array("バナナ", $fruits)) {
//     echo "バナナは含まれています。<br>";
// } else {
//     echo "バナナは含まれていません。<br>";
// }
// 🔍 今回の問題では、「好きな果物」が グループA または グループB に含まれているかを判定するために使います。


// ⓶ fruit_group_summary.php（配列の中の情報を集計）
// 📘 ポイント：ユーザーの好きな果物をカウントする考え方
// $users = [
//     ["name" => "たけし", "fruit" => "りんご"],
//     ["name" => "さくら", "fruit" => "バナナ"],
//     // ...
// ];

// $fruit_counts = [];

// foreach ($users as $user) {
//     $fruit = $user["fruit"];

//     if (!isset($fruit_counts[$fruit])) {
//         $fruit_counts[$fruit] = 0;
//     }
//     $fruit_counts[$fruit]++;
// }
// 🔍 今回は 果物の種類ごと ではなく、果物のグループごと に人数をカウントする点が異なりますが、「カウント変数を使う」「ループ処理で1人ずつ確認する」構造は同じです。

// ⓷ fruit_group_judge.php（グループ判定のロジック）
// 📘 ポイント：どのグループに属するかの条件判定

// $group_a = ["りんご", "さくらんぼ", "いちご"];
// $group_b = ["バナナ", "みかん", "パイナップル"];

// if (in_array($fruit, $group_a)) {
//     // グループA
// } elseif (in_array($fruit, $group_b)) {
//     // グループB
// } else {
//     // 該当なし
// }
// 🔍 この構造はまさに今回の中心ロジックです。ユーザーの「好きな果物」がどのグループに属するかを判定して、人数をカウントしていきます。

// ⓸ loop_record_summary.php（ループでの記録とループ後のまとめ）
// 📘 ポイント：ループ内で記録し、ループ終了後に結果を比較して表示

// // ループ内で人数カウント
// foreach (...) {
//     if (...) {
//         $group_a_count++;
//     } elseif (...) {
//         $group_b_count++;
//     }
// }

// // 最終結果の比較と表示
// if ($group_a_count > $group_b_count) {
//     echo "グループAの方が人気です<br>";
// } elseif (...) {
//     ...
// } else {
//     echo "同数でした<br>";
// }
// 🔍 これは最終段階の「判定と出力」の参考になります。

// 🧩 補足：使う知識のまとめ
// 概念	        必要な内容	    参照ファイル
// 配列とループ	ユーザー情報をforeachで回す	fruit_group_summary.php
// グループ分け	果物をグループA/Bに分類	fruit_group_judge.php
// 含まれているかの判定	in_array() の使い方	in_array_lesson.php
// カウントと結果の比較	人数を比較し結果を表示	loop_record_summary.php



// 🧭 進めるコツ：小さく区切ること
// 以下のように、段階ごとに確認しながら実装すればスムーズに完成できます。

// users 配列・group_a/group_b 配列を用意
// カウント用の変数 $group_a_count, $group_b_count を初期化
// foreach で $users を1件ずつ処理
// in_array() でグループ所属を判定
// カウント変数を加算
// ループ後に人数を比較
// 結果のメッセージを echo


// ✅ その下に『自分でPHPコード』を書いてください。
// （ここに自分でPHPコードを書いてください）

// ユーザー情報を用意
$users = [
    ["name" => "たけし", "fruit" => "バナナ"],
    ["name" => "さくら", "fruit" => "バナナ"],
    ["name" => "まさし", "fruit" => "いちご"],
    ["name" => "ゆうこ", "fruit" => "パイナップル"],
    ["name" => "けん", "fruit" => "さくらんぼ"],
    ["name" => "あい", "fruit" => "みかん"],
    ["name" => "りさ", "fruit" => "ぶどう"] // カウント対象外になる例
];

// 果物のグループを定義
$group_a = ["りんご", "さくらんぼ", "いちご"];        // 赤系
$group_b = ["バナナ", "みかん", "パイナップル"];     // 黄系

// カウント用の変数を初期化
$group_a_count = 0;
$group_b_count = 0;

// ✅ ここから下にループ処理を書いてください
// foreach ($users as $user) でループ開始
foreach ($users as $user) {
    $fruit = $user["fruit"];
    // $user["fruit"] を in_array() でチェック

    // カウント変数を加算
    if (in_array($fruit, $group_a)) {
        $group_a_count++;
    } elseif (in_array($fruit, $group_b)) {
        $group_b_count++;
    } else {
        // no target
    }
}
// 最後に echo 文で表示


echo "グループA（赤系）を好む人数: {$group_a_count}人<br>";
echo "グループB（黄系）を好む人数: {$group_b_count}人<br><br>";


if ($group_a_count > $group_b_count) {
    echo "グループAの方が人気です。<br>";
} elseif ($group_a_count < $group_b_count) {
    echo "グループBの方が人気です。<br>";
} else {
    echo "同数でした。<br>";
}


//  ユーザーの「好きな果物」がグループAに含まれているかを調べる（in_array）
// → 含まれていたら、グループAのカウントを+1する
//  そうでなければ、グループBに含まれているかを調べる
// → 含まれていたら、グループBのカウントを+1する
//  どちらにも含まれていない場合は何もしない
//
//  すべてのループが終わったあと、グループAとグループBの人数を比較する
//  → グループAの方が多ければ「グループAの方が人気です」と表示
//  → グループBの方が多ければ「グループBの方が人気です」と表示
//  → 同じ人数であれば「同数でした」と表示
//
//  最後に「グループA（赤系）を好む人数: ○人」などの人数も表示する