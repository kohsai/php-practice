<?php
// 🎯 Day6 練習問題（function_return_condition_practice.php）

// 📝 【問題】
// 年齢を引数に受け取り、「20歳以上かどうか」を判定する関数を作成してください。
// 関数は、20歳以上なら true を、未満なら false を戻り値として返すようにします。
// 呼び出し元では、戻り値に応じて「成人です」または「未成年です」と表示してください。

// 【条件】
// ✅ 関数名は isAdult とする
// ✅ 引数に「年齢（整数）」を1つ受け取る
// ✅ 年齢が 20 以上なら true、そうでなければ false を return する
// ✅ 呼び出し元では戻り値を使って、以下のように表示する（<br> 使用）
//    - true の場合：「成人です」
//    - false の場合：「未成年です」
// ✅ 年齢を複数パターン（例：18, 20, 25）で試すこと

// 【ヒント】
// 💡 条件判定には if文または三項演算子を使用してもOKです
// 💡 戻り値（true/false）を受け取って、ifで分岐しましょう


// ✅ ここから下に『自分で考えた日本語の処理手順』をコメントで書いてください。
// （ここに自分で日本語の処理文を書いてください）
// 関数名は isAdult で定義する
// 引数に「年齢（整数）」を1つ受け取る
// 年齢が 20 以上なら true、そうでなければ false を return する
// 呼び出し元では戻り値を使って、以下のように表示する（<br> 使用）
//    - true の場合：「成人です」
//    - false の場合：「未成年です」
// 年齢を複数パターン（例：18, 20, 25）で試す


// ✅ その下に『自分でPHPコード』を書いてください。
// （ここに自分でPHPコードを書いてください）


// 【最初に書いたコード（誤り有り）】
// function isAdult($age)
// {
//     if ($age >= 20) {
//         return "true";
//     } else {
//         return "false";
//     }
// }

// $user_age = 28;
// $age = isAdult($user_age);

// if ($age === "true") {
//     echo "成人です。<br>";
// } else {
//     echo "未成年です。<br>";
// }


// ここで採点に入るが大幅に修正される。
//             ↓


// 🔹 あなたの考え：
// 「年齢が20歳以上なら“true”を返したい。20未満なら“false”を返したい。
// 'true' と 'false' をそのまま文字として書いておけばいいんだよね？」

// ➡️ この考え方は、「echo用の文字列」という理解に近く、表示目的の 'true'/'false' 文字列になっています。


// ❌ なぜ間違えたのか？

// 誤ったポイント
// "true" は文字列であり、PHPの true とは別物
// if文の条件として判定に使う場合、true は boolean型（真偽値）でなければならない

// 結果として、if ($age === "true") のような 複雑な比較が必要になってしまう
// 本来、if (isAdult($age)) のようにシンプルに書けるのが正しい

// 正しい考え方：「条件式そのものを返す」
// 修正後の記述：

// function isAdult($age)
// {
//     return $age >= 20;
// }

// なぜこれでOKか？
//
// $age >= 20	true か false を返す条件式（比較演算）
// return $age >= 20;	結果が true または false（boolean型）として return される
// if (isAdult($age))	関数の返り値をそのまま if文の条件に使える（自然な書き方）


// 📘 呼び出し元の記述の修正と考え方
// あなたの元の記述：

// $age = isAdult($user_age);

// if ($age === "true") {
//     echo "成人です。<br>";
// } else {
//     echo "未成年です。<br>";
// }

// この時の思考：
// 「true という文字列を返しているから、それと一致しているか比較しないといけないな」

// ➡️ これは「返ってくるのが文字列である前提」による思考です。

// ✅ 正しい記述と理由：

// if (isAdult($user_age)) {
//     echo "成人です。<br>";
// } else {
//     echo "未成年です。<br>";
// }

// 考え方：

// isAdult() が返すのは boolean（true/false）
// if (true) → 条件成立、if (false) → 条件不成立
// だから === 比較など不要で、自然な分岐処理ができる


// 💡 まとめ：あなたが次に意識すべきこと
// 気をつけるべき点と今後のポイント

// "true"（文字列）と true（boolean）は違う。
// 表示用ではなく、判定用の値として使うなら boolean型を選ぶ

// return の戻り値は型が重要。
// 「何を返すか」だけでなく、「どう使うか（ifで使うか等）」をセットで考える
// if (関数()) の形はよく出る。
// PHPではこのパターンを多用するので、今のうちに自然に使えるように慣れること


// どこで間違えたのか？？
// 🧠 自分のつまずき：return "true"; と書いたが、それは表示用の文字列だった
// 🧠 今の理解：条件に使う値は boolean型を返さないと if文での分岐が正しくできない


// 今夏の失敗から学んだポイント
// 🎯 処理の目的：true/false を返して、if文で条件判定に使う
// 🎯 必要な型：boolean（真偽値）
// 🎯 書き方のポイント：return の値をそのまま if(関数) に使える形にする


// 正しいコード
// ↓
function isAdult($age)
{
    return $age >= 20;  // ← boolean型で判定
}

$ages = [18, 20, 25];  // ← 複数パターンでテスト

foreach ($ages as $age) {
    if (isAdult($age)) {
        echo "{$age}歳 → 成人です。<br>";
    } else {
        echo "{$age}歳 → 未成年です。<br>";
    }
}
