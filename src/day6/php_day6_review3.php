<?php
// // ☕ PHPコーヒー 第16問（テーマ：関数 × if文でのtrue/false判定）
// // 🎯 【選択肢問題】

// // この関数 isAdult は、与えられた年齢が20歳以上なら true、そうでなければ false を返します。

// function isAdult($age)
// {
//     return $age >= 20;
// }

// // 🎯 【問題】
// // 次のコードを実行すると、画面にはどのメッセージが表示されますか？

// $inputAge = 18;

// if (isAdult($inputAge)) {
//     echo "成人です<br>";
// } else {
//     echo "未成年です<br>";
// }

// // 🔘 【選択肢】
// // A. 成人です<br>
// // B. 未成年です<br>
// // C. エラーが発生する
// // D. 何も表示されない

// // ✅ 回答：__B__(ここに答えを書いてください)



// ☕ PHPコーヒー 第17問（テーマ：関数の戻り値 × else if）
// 🎯【目的】
// - 関数の戻り値を条件分岐に使う
// - if / elseif / else を正しく理解し、分岐の順序に注意する

// 🔧【関数の定義】
// function getCategory($price)
// {
//     if ($price >= 10000) {
//         return "高額商品";
//     } elseif ($price >= 5000) {
//         return "中価格帯";
//     } else {
//         return "お手頃価格";
//     }
// }

// 🎯【問題文】
// 変数 $price に 7000 を代入し、getCategory関数を呼び出します。
// 戻り値を $category に代入し、以下のように画面に表示します。

// $price = 7000;
// $category = getCategory($price);

// echo "この商品のカテゴリは「" . $category . "」です。<br>";

// 🔘【選択肢】
// A. この商品のカテゴリは「高額商品」です。<br>
// B. この商品のカテゴリは「中価格帯」です。<br>
// C. この商品のカテゴリは「お手頃価格」です。<br>
// D. エラーが発生する

// ✅【回答欄】
// 回答：（B）


// 🧠【以下は採点と解説】

// 正解！

// $price = 7000;
// このとき、getCategory(7000) の処理は以下の順に評価されます。

// if ($price >= 10000) {
//     // 7000 >= 10000 → false（スキップ）
// } elseif ($price >= 5000) {
//     // 7000 >= 5000 → true（ここが実行される）
//     return "中価格帯";
// } else {
//     // 実行されない
// }

// そのため $category には "中価格帯" が代入され、最終的に出力は：
// この商品のカテゴリは「中価格帯」です。<br>
// となります。

// 💡ポイント整理
// if / elseif / else は上から順に評価される
// 最初にtrueになったブロックが実行され、以降は無視される



// ☕ PHPコーヒー 第18問（テーマ：関数の戻り値 × 否定条件）
// 🎯【目的】
// - 戻り値 true/false を if文で正しく扱う
// - 否定条件（!演算子）の意味を理解する

// 🔧【関数の定義】
// function isValidUser($username)
// {
//     // ユーザー名が "guest" でない場合、有効ユーザーとみなす
//     return $username !== "guest";
// }

// // 🎯【問題文】
// // ユーザー名 $inputName に "guest" を代入し、isValidUser関数で判定します。
// // もし有効ユーザーでなければ「アクセス制限中」と表示し、
// // そうでなければ「ようこそ！」と表示してください。

// $inputName = "guest";

// if (!isValidUser($inputName)) {
//     echo "アクセス制限中<br>";
// } else {
//     echo "ようこそ！<br>";
// }

// 🔘【選択肢】
// A. アクセス制限中<br>
// B. ようこそ！<br>
// C. エラーが発生する
// D. 何も表示されない

// ✅【回答欄】
// 回答：（A）
// ※理由や考えもコメントで書いてみましょう。

// ！演算子によって判定内容を反転させているので、
// 「ユーザー名が "guest" でない場合、有効ユーザーとみなす
// return $username !== "guest";」の部分が反転し、
// 「ユーザー名が"guest"の場合、有効ユーザーとみなし、true判定になる」ので、
// trueのecho内容「アクセス制限中<br>」が表示される。

// 以下は採点と解説 ↓
// ✅【採点結果】
// KOHの回答：A → 正解です！🎯

// 🧠【丁寧な解説】
// まずは関数の中身から確認：

// function isValidUser($username) {
//     return $username !== "guest";
// }
// この関数の意味は：
// 🔹「ユーザー名が "guest" でない場合 → true（有効ユーザー）
// 🔹 "guest" の場合 → false（無効ユーザー）」

// 次にこのコード：
// $inputName = "guest";
// つまり、isValidUser("guest") は false を返します。

// そして判定文：
// if (!isValidUser($inputName)) {
//     echo "アクセス制限中<br>";
// }
// ここで !false → true となり、**「アクセス制限中<br>」**が表示されます。


// 💡【ここが大事なポイント】
// 関数の戻り値が false なのに ! をつけて反転している
// !false → true になるので、if文が実行される

// 🔍【実務での使用場面・注意点】
// このような処理は、ログイン機能の制限や特定ユーザーのアクセス制御でよく使われます。

// ✅ よくある活用例：
// "admin" だけ許可するページ
// "guest" のような仮ユーザーには投稿などを許可しない
// ⚠️ よくあるミス：
// ! の扱いを間違えると、意図しないユーザーが通ってしまう／弾かれてしまう

// 特に === や !== の判定と ! を組み合わせるときは、条件の反転を頭で整理する力が必要


// 🚨 KOHの表現でズレていた部分
// KOHは「"guest" のとき true になる」と書いていましたが、実際には：
// "guest" のとき → false が返る（有効でない）
// それを !false にして → true になる（アクセス制限）

// つまり、KOHの最後の結論は正解ですが、
// 途中のこの表現だけが少し逆転してしまっていました：
// 「"guest" の場合、有効ユーザーとみなし、true判定になる」
// → これは ×（正しくは false になる）
// → その後 ! によって true に反転されるのが正しい流れです。


// ✅ 今回のズレの本質は？
// 「guest の場合、有効ユーザーとみなし、true判定になる」
// この言い回しが、
// guest のとき「関数の中で true を返している」と誤解されそうな表現になってしまった
// 実際はその後の ! によって if文の中では true として扱われているというのが正しい流れ
// というだけです。考え方自体は完全に合っています。

// 💡 補足ワード例（よかったら今後使ってください）
// 「guestの場合は関数から false が返るが、! で反転されて if文の中では true として扱われる」

// もう少しだけ具体性を加えるなら、こう言ってもいいかもしれません：
// 「ユーザー名が 'guest' のとき、関数は false を返すが、! を使ってその値を反転しているため、if文の条件は true になり、ブロック内の処理が実行される」



// ☕ PHPコーヒー 第19問（テーマ：関数 × if文の中での return）
// 🎯【問題】
// 以下の関数 isValidScore は、引数が 0〜100 の範囲内であれば true を返し、
// それ以外の場合は false を返します。

// function isValidScore($score)
// {
//     return $score >= 0 && $score <= 100;
// }

// 🎯【出題コード】
// 変数 $input に -15 を代入し、関数の戻り値を if文で判定して、
// 以下のメッセージのいずれかを表示してください：
// - 「有効な点数です<br>」
// - 「無効な点数です<br>」

// $input = -15;

// if (isValidScore($input)) {
//     echo "有効な点数です<br>";
// } else {
//     echo "無効な点数です<br>";
// }

// 🔘 【選択肢】
// A. 有効な点数です<br>
// B. 無効な点数です<br>
// C. エラーが発生する
// D. 何も表示されない

// ✍️【あなたの回答】
// 回答：____B_____

// 正解！！
// 🧠 採点と解説
// 関数 isValidScore($score) の中身は以下のとおりです：

// return $score >= 0 && $score <= 100;
// これはつまり、0以上かつ100以下であれば true、それ以外は false を返す、という論理式です。

// 今回の $input = -15; という値は：
// -15 >= 0 → false
// -15 <= 100 → true
// 全体が false && true なので、false が返ります。
// その結果、if文は else に進み、次のように表示されます：
// echo "無効な点数です<br>";


// // ☕ PHPコーヒー 第20問（テーマ：関数 × 戻り値を if文で直接判定）
// // 🎯【問題】
// // 関数 isAdult は、与えられた年齢が 20歳以上であれば true、そうでなければ false を返します。

// function isAdult($age)
// {
//     return $age >= 20;
// }

// // 🎯【出題コード】
// // 変数 $userAge に 22 を代入し、関数 isAdult を使って、
// // 以下のメッセージのいずれかを表示してください：
// // - 「成人です<br>」
// // - 「未成年です<br>」

// $userAge = 22;

// if (isAdult($userAge)) {
//     echo "成人です<br>";
// } else {
//     echo "未成年です<br>";
// }

// // 🔘 【選択肢】
// // A. 成人です<br>
// // B. 未成年です<br>
// // C. エラーが発生する
// // D. 何も表示されない

// // ✍️【あなたの回答】
// // 回答：____A____

// 正解です！！
// 🧠 採点と解説
// まず関数の定義を確認します：

// function isAdult($age)
// {
//     return $age >= 20;
// }
// $age が 20以上 → true

// それ未満 → false

// そして $userAge = 22; なので：

// isAdult(22) → 22 >= 20 → true
// よって if (true) となり、表示されるのは：

// echo "成人です<br>";


// // ☕ PHPコーヒー 第21問（テーマ：関数 × 論理演算子 × if文判定）
// // 🎯【問題】
// // 関数 isTeenager は、引数で与えられた年齢が 13歳以上かつ 19歳以下の場合に true を返し、
// // それ以外は false を返します。

// function isTeenager($age)
// {
//     return $age >= 13 && $age <= 19;
// }

// // 🎯【出題コード】
// // 変数 $userAge に 12 を代入し、isTeenager 関数の戻り値を使って以下のメッセージのいずれかを表示してください：
// // - 「10代です<br>」
// // - 「10代ではありません<br>」

// $userAge = 12;

// if (isTeenager($userAge)) {
//     echo "10代です<br>";
// } else {
//     echo "10代ではありません<br>";
// }

// // 🔘 【選択肢】
// // A. 10代です<br>
// // B. 10代ではありません<br>
// // C. エラーが発生する
// // D. 何も表示されない

// // ✍️【あなたの回答】
// // 回答：____B____

// 正解です！！
// 🧠 採点と解説
// 関数 isTeenager($age) の中身を確認します：

// return $age >= 13 && $age <= 19;
// この式は論理積（AND）であり、両方の条件を満たす場合のみ true を返します。

// 今回の $userAge = 12; に対しては：

// 12 >= 13 → false

// 12 <= 19 → true

// 結果として false && true → false になります。

// したがって、if文の判定は false → else に進み、

// echo "10代ではありません<br>";
// が表示されます。


// // ☕ PHPコーヒー 第22問（テーマ：関数 × if文での直接判定 × 戻り値が false）
// // 🎯【問題】
// // 関数 isAvailableProduct は、商品名が "在庫なし" の場合は false、
// // それ以外は true を返します。

// function isAvailableProduct($productName)
// {
//     return $productName !== "在庫なし";
// }

// // 🎯【出題コード】
// // 変数 $item に "在庫なし" を代入し、関数の戻り値を if文で判定して、
// // 以下のメッセージのいずれかを表示してください：
// // - 「購入できます<br>」
// // - 「現在は購入できません<br>」

// $item = "在庫なし";

// if (isAvailableProduct($item)) {
//     echo "購入できます<br>";
// } else {
//     echo "現在は購入できません<br>";
// }

// // 🔘 【選択肢】
// // A. 購入できます<br>
// // B. 現在は購入できません<br>
// // C. エラーが発生する
// // D. 何も表示されない

// // ✍️【あなたの回答】
// // 回答：____B____falseを返しているから・・。
