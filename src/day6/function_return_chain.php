<?php
// 📘 Day6 教材（function_return_chain.php）

// 📝 【テーマ】関数の「戻り値」を別の関数の「引数」として使う（関数の連携）

// ✅ まずは、1つ目の関数「半分にする関数」を定義します
function halve($number)
{
    // 受け取った数を半分にして返す
    return $number / 2;
}

// ✅ 次に、2つ目の関数「3倍にする関数」を定義します
function triple($number)
{
    // 受け取った数を3倍にして返す
    return $number * 3;
}

// ✅ ここで、関数の戻り値を別の関数に渡してみます
// 例：12 を半分にして → その結果を3倍にする
$result = triple(halve(12));

// ✅ 結果を表示します
echo "12 を半分にして 3倍すると: {$result} になります。<br>";

// ✅ このように、戻り値をそのまま次の関数の引数に使うことを「関数のチェーン（連結）」と呼ぶことがあります。


// 🧠 補足解説：関数の戻り値を別の関数に渡すとは？
// halve(12) → 6 を返す
// triple(6) → 18 を返す
// よって triple(halve(12)) → 18 になります。

// 関数は単独でも使えますが、複数の処理を組み合わせることで再利用性・効率が上がります。


// 🔰 学習ポイントまとめ：
// return された値は、その場で他の関数に渡すことが可能。

// triple(halve(12)) のような書き方は内側の関数から順に評価されます。

// 関数の再利用性を高めるための基本テクニックとして、関数の連携は非常に重要です。