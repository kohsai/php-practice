<?php
// 🎓 Day6 教材（function_return_summary.php）

// ✅ 【1】return の基本構文
// 関数の中で return を使うと、処理結果を「呼び出し元」に返すことができます。
// 例えば、計算の結果や文字列などを関数の外で使いたいときに便利です。

function greet()
{
    return "こんにちは！"; // 文字列を返す
}

$message = greet(); // 戻り値を変数に代入
echo $message . "<br>"; // ⇒ 表示結果：こんにちは！

// ---------------------------------------------

// ✅ 【2】return の値をそのまま出力することも可能
// 戻り値を変数に入れず、直接 echo の中で使うこともできます。

function getToday()
{
    return "今日は火曜日です";
}

echo getToday() . "<br>"; // ⇒ 表示結果：今日は火曜日です

// ---------------------------------------------

// ✅ 【3】計算結果を返す関数の例

function add($a, $b)
{
    $sum = $a + $b;
    return $sum; // 計算結果を返す
}

$result = add(3, 7);
echo "3 + 7 の結果は：{$result}<br>"; // ⇒ 表示結果：3 + 7 の結果は：10

// ---------------------------------------------

// ✅ 【4】return の注意点
// return を使うと、その時点で関数の処理が終了します。
// return の後の処理は実行されません。

function example()
{
    return "ここで終了";
    echo "この行は実行されません"; // ← このコードは無視される
}

echo example() . "<br>"; // ⇒ 表示結果：ここで終了

// ---------------------------------------------

// ✅ 【5】return を使わない関数との違い
// 「return あり」は「値を返す」
// 「return なし」は「画面に直接出力」や「処理を行うだけ」

function sayHello()
{
    echo "やあ！<br>"; // 呼び出し元には何も返さない（戻り値なし）
}

sayHello(); // ⇒ 表示結果：やあ！
