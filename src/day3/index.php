<?php
// PHPのタイムゾーンを日本時間に設定（UTC→Asia/Tokyo）
date_default_timezone_set("Asia/Tokyo");

// -----------------------------
// 年齢による料金の条件分岐
// -----------------------------

// 年齢を設定（今回は例として43歳）
$age = 43;

// if文で条件分岐を行う
if ($age < 13) {
    // 13歳未満 → 子供料金
    echo "<p>子供料金です。</p>";
} elseif ($age < 18) {
    // 13歳以上かつ18歳未満 → 中高生料金
    echo "<p>中高生料金です。</p>";
} elseif ($age < 65) {
    // 18歳以上かつ65歳未満 → 大人料金
    echo "<p>大人料金です。</p>";
} else {
    // 65歳以上 → シニア料金
    echo "<p>シニア料金です。</p>";
}



// -----------------------------
// 曜日によるコメントの分岐（switch文）
// -----------------------------

// 日本語の曜日名を取得
$weekDays = [
    "Sunday" => "日曜日",
    "Monday" => "月曜日",
    "Tuesday" => "火曜日",
    "Wednesday" => "水曜日",
    "Thursday" => "木曜日",
    "Friday" => "金曜日",
    "Saturday" => "土曜日"
];

$day_en = date("l");              // 英語の曜日名を取得（例: Sunday）
$day = $weekDays[$day_en];       // 対応する日本語を取得

// switch文で値に応じた処理を分岐
switch ($day) {
    case "月曜日":
        // 曜日が月曜日ならこのメッセージ
        echo "今週もがんばろう！<br>";
        break;

    case "金曜日":
        // 金曜日ならこのメッセージ
        echo "もうすぐ週末！<br>";
        break;

    case "土曜日":
    case "日曜日":
        // 土曜または日曜 → 同じメッセージを表示
        echo "ゆっくり休んでね！<br>";
        break;

    default:
        // どのcaseにも当てはまらない場合
        echo "ふつうの日です。<br>";
}

// 📘 論理演算子とは
// 複数の条件を組み合わせるために使用する。
// 例: 年齢が18歳以上かつ会員であれば「大人の会員」

$age = 20;
$is_member = true;

if ($age >= 18 && $is_member) {
    echo "<p>大人の会員です。</p>";  // ← 出力例：大人の会員です。
}


// 🧠 三項演算子（Ternary Operator）とは？

// 条件 ? 真の処理 : 偽の処理;
// 「if / else を1行で簡潔に書ける」構文。

// 📌 実例：ログインメッセージ

$is_logged_in = true;

echo $is_logged_in ? "<p>ようこそ！</p>" : "<p>ログインしてください。</p>";
// $is_logged_in が true なら「ようこそ！」、false なら「ログインしてください。」



// ✅ Day3 後半：ネストされたif文と条件の分解
// 1. ネストされたif文（入れ子のif）

$age = 20;
$hasLicense = true;

if ($age >= 18) {
    if ($hasLicense) {
        echo "<p>運転できます。</p>";
    } else {
        echo "<p>免許が必要です。</p>";
    }
} else {
    echo "<p>18歳未満は運転できません。</p>";
}


// 📝 解説
// このようにifの中にさらにif文を書くと、条件を段階的に分けて処理できます。これは「ネスト（入れ子）」と呼ばれます。

// 2. 条件の分解と整理（論理演算子との違い）
// ネストを減らしてスッキリ書くこともできます:


if ($age >= 18 && $hasLicense) {
    echo "<p>運転できます。</p>";
} elseif ($age >= 18 && !$hasLicense) {
    echo "<p>免許が必要です。</p>";
} else {
    echo "<p>18歳未満は運転できません。</p>";
}
?>

<!-- 📝 どちらが良い？

ネスト型 → 処理が段階的で「中の条件が外の条件に依存」している場合に使いやすい

分岐型 → 条件が並列的にチェックできるときにスッキリ書ける -->


